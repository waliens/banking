services:
  # flask server
  server:
    build:
      context: server/
      dockerfile: Dockerfile
      target: backend
    ports:
      - 5000:5000
    entrypoint: /bin/sh  # to make the container hang
    stdin_open: true 
    tty: true
    environment:
      - DB_HOST=database
      - DB_PORT=5432
      - DB_USER=admin
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=banking
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET_KEY=${JWT_SECRET}
    restart: always
    volumes:
      - ./server/:/app  # to share code and having refresh on update
      - models:/models

  # vue client
  frontend:
    build:
      context: frontend/
      dockerfile: Dockerfile
      target: dev-server
    environment:
      - BACKEND_BASE_URL=http://localhost:5000
    ports:
      - 8080:8080
    volumes:
      - ./frontend:/app  # to share code and having refresh on update

  # message broker for background tasks
  redis:
    image: redis:6-alpine

  database:
    image: postgres:16.1-alpine3.19
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_DB=banking
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - PGDATA=/data
    volumes:
      - db:/data
    ports:
      - 5432:5432
    
  # worker for celery background tasks
  celery_worker:
    build:
      context: server/
      dockerfile: Dockerfile
    command: "celery -A banking.celery worker"
    environment:
      - DB_HOST=database
      - DB_PORT=5432
      - DB_USER=admin
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=banking
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET_KEY=${JWT_SECRET}
    restart: always
    depends_on:
      - redis
      - database
    volumes:
      - models:/models

volumes:
  db:
  models: