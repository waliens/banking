x-base-server: &base-server
  build:
    context: server/
    dockerfile: Dockerfile
    target: backend
  volumes:
    - ./server/:/app  # to share code and having refresh on update
    - models:/models
  depends_on:
    - database
  environment: &base-server-envs
    DB_HOST: database
    DB_PORT: 5432
    DB_USER: admin
    DB_PASSWORD: ${DB_PASSWORD:-password}
    DB_NAME: banking

services:
  # flask server
  server:
    <<: *base-server
    profiles: 
      - default
      - backend
    entrypoint: ["/bin/sh"]  # to make the container hang
    ports:
      - 5000:5000
    stdin_open: true 
    tty: true
    restart: always
    environment:
      <<: *base-server-envs
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET_KEY: ${JWT_SECRET:-mysuperlongsecret}

  server-db-revision:
    <<: *base-server
    profiles: 
      - migration
    command: "alembic revision --autogenerate && alembic upgrade head"

  # vue client
  frontend:
    build:
      context: frontend/
      dockerfile: Dockerfile
      target: dev-server
    profiles: 
      - default
      - frontend
    environment:
      - BACKEND_BASE_URL=http://localhost:5000
    ports:
      - 8080:8080
    volumes:
      - ./frontend:/app  # to share code and having refresh on update

  # message broker for background tasks
  redis:
    image: redis:6-alpine
    profiles: 
      - default
      - backend

  database:
    image: postgres:16.1-alpine3.19
    profiles: 
      - migration
      - default
      - backend
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_DB=banking
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
      - PGDATA=/data
    volumes:
      - db:/data
    ports:
      - 5432:5432
    
  # worker for celery background tasks
  celery_worker:
    build:
      context: server/
      dockerfile: Dockerfile
    command: "celery -A banking.celery worker"
    profiles:
      - default 
      - backend
    environment:
      - DB_HOST=database
      - DB_PORT=5432
      - DB_USER=admin
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_NAME=banking
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET_KEY=${JWT_SECRET:-mysuperlongsecret}
    restart: always
    depends_on:
      - redis
      - database
    volumes:
      - models:/models

    
volumes:
  db:
  models:


