services:
  # flask server
  server:
    build:
      context: server/
      dockerfile: Dockerfile
    ports:
      - 5000:5000
    entrypoint: /bin/sh
    stdin_open: true 
    tty: true
    environment:
      - FLASK_APP=banking
      - FLASK_RUN_HOST=0.0.0.0
      - DB_HOST=database
      - DB_PORT=5432 
      - DB_USER=admin
      - DB_PASSWORD=password
      - DB_NAME=banking_dev
      - MODEL_PATH=/models
      - FLASK_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    restart: always
    volumes:
      - ./server/:/app  # to share code and having refresh on update
      - models:/models
    depends_on:
      - database

  # vue client
  frontend:
    build:
      context: frontend/
      dockerfile: Dockerfile.dev
    environment:
      VUE_APP_API: localhost:5000
    ports:
      - 8080:8080
    volumes:
      - ./frontend/src:/app/src  # to share code and having refresh on update

  # message broker for background tasks
  redis:
    image: redis:6-alpine
    ports: 
      - 6379:6379

  database:
    image: postgres:14.3-alpine
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_DB=banking_dev
      - POSTGRES_PASSWORD=password
      - PGDATA=/data
    volumes:
      - db:/data
    ports:
      - 5432:5432
    
  # worker for celery background tasks
  celery_worker:
    build:
      context: server/
      dockerfile: Dockerfile
    command: "celery -A banking.celery worker"
    environment:
      - FLASK_APP=banking
      - FLASK_RUN_HOST=0.0.0.0
      - DB_HOST=database
      - DB_PORT=5432 
      - DB_USER=admin
      - DB_PASSWORD=password
      - DB_NAME=banking_dev
      - MODEL_PATH=/models
      - FLASK_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    restart: always
    depends_on:
      - redis
      - server
      - database
    volumes:
      - models:/models

volumes:
  db:
  models: